---
- name: Ensure users from user_subs are created with home directory but no password
  ansible.builtin.user:
    name: "{{ item }}"
    home: "/home/{{ item }}"
    create_home: yes
    shell: /bin/bash
    password_lock: yes
    state: present
  loop: "{{ user_subs }}"

- name: Ensure .ssh directory exists
  file:
    path: "/home/{{ item }}/.ssh"
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: '0700'
  loop: "{{ user_subs }}"

- name: Ensure authorized_keys file is present
  ansible.builtin.file:
    path: "/home/{{ item }}/.ssh/authorized_keys"
    state: touch
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: '0600'
  loop: "{{ user_subs }}"

- name: Install bindfs package
  ansible.builtin.package:
    name: bindfs
    state: present

- name: Copy rclone config file
  ansible.builtin.template:
    src: "rclone.conf.j2"
    dest: "{{ rclone_config }}"
    owner: root
    group: root
    mode: '0644'

- name: Create the script directory
  ansible.builtin.file:
    path: "{{ script_dir }}"
    state: directory
    mode: '0755'

- name: Copy the mount-storage script to the script directory
  ansible.builtin.template:
    src: "mount-storage.sh.j2"
    dest: "{{ script_dir }}/{{ script_storage }}"
    mode: '0755'

- name: Copy the mount-check script to the script directory
  ansible.builtin.template:
    src: "mount-check.sh.j2"
    dest: "{{ script_dir }}/{{ script_check }}"
    mode: '0755'

- name: Copy the mount-storage service template to /etc/systemd/system
  ansible.builtin.template:
    src: "mount-storage.service.j2"
    dest: "{{ systemd_dir }}/{{ storage_service_name }}"
    mode: '0644'

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable the mount-storage service
  ansible.builtin.systemd:
    name: "{{ storage_service_name }}"
    enabled: yes

- name: Start the mount-storage service
  ansible.builtin.systemd:
    name: "{{ storage_service_name }}"
    state: started
